import java.util.HashMap;
import java.util.Map;

public class Portfolio {

	private double cashBalance;
	private Map<Stock, Integer> holdings;  // {AAPL: 5 shares}
	
	public Portfolio(double initialCash) {
		cashBalance = initialCash;
		holdings = new HashMap<>();
	}
	
	public boolean buyStock (Stock stock, int quant) {
		int price = (int) (quant * stock.getPrice());
		if (price > cashBalance) {
			System.out.println("Insufficient funds");
			return false;
		}
		else {
			cashBalance -= price;
			holdings.put(stock, quant);
		}
		return true;
	}
	
	public boolean sellStock (Stock stock, int quant) {
		if (holdings.get(stock) == quant) {
			cashBalance += (int) (quant * stock.getPrice());
			if (holdings.get(stock)-quant == 0) {
				holdings.remove(stock);
			}
			else {
				holdings.replace(stock, holdings.get(stock)-quant);
			}
		}
		else {
			System.out.println("You don't own that number of shares");
			return false;
		}
		return true;
	}
	
	public double getTotalValue() {  // output cash+value of stocks
		double totalCash = cashBalance;
		for (Stock shares: holdings.keySet()) {
			totalCash += holdings.get(shares) * shares.getPrice();
		}
		return totalCash;
	}
	
	public void printSummary() {
		for (Stock shares: holdings.keySet()) {
			System.out.println(shares + ": " + holdings.get(shares));
		}
		System.out.println();
		System.out.println("Number of shares: " + holdings.size());
		System.out.println("Value of shares: " + (getTotalValue()-cashBalance));
		System.out.println("Total Value: " + getTotalValue());
		System.out.println("Cash Balance: " + cashBalance);
	}

}
